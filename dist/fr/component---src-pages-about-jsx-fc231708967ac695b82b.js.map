{"version":3,"sources":["webpack:///./src/components/button.jsx","webpack:///./src/pages/about.jsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/container.jsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/navbar.jsx","webpack:///./src/components/layout.jsx"],"names":["Button","styled","Link","withConfig","displayName","componentId","__webpack_require__","d","__webpack_exports__","query","About","div","Header","h1","Description","ConnectButton","AboutPage","_ref","data","location","content","pageName","title","description","childMarkdownRemark","html","buttonText","buttonLink","react_default","a","createElement","layout","container","dangerouslySetInnerHTML","__html","to","r","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_wait_for_route_change__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4___default","_parse_path__WEBPACK_IMPORTED_MODULE_5__","React","createContext","props","Consumer","staticQueryData","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","Container","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Footer","footer","Navigation","ul","NavigationItem","nav","NavigationLink","Hamburger","HamburgerIcon","span","Credits","getLinkForPage","page","type","__typename","replace","toLowerCase","url","external","key","text","determineCurrent","href","linkPath","style","color","NavBar","_ref3","gatsby_browser_entry","credits","links","pages","map","insertAfterIndex","x","indexOf","insertLinksAfter","externalLinks","_ref2","encodeURIComponent","splice","apply","concat","className","id","link","getProps","makeContent","_2260636581","Main","main","Layout","siteName","keywords","Fragment","Helmet_default","meta","name","lang","navbar","_297150321","node"],"mappings":"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","file":"component---src-pages-about-jsx-fc231708967ac695b82b.js","sourcesContent":["import { Link } from 'gatsby';\nimport styled from 'styled-components';\n\nconst Button = styled(Link)`\n  transition: background-color 0.5s ease-in-out;\n  background-color: #e74c3c;\n  border-radius: 100px;\n  color: #fff;\n  padding: 15px 35px;\n  text-decoration: none;\n\n  &:hover {\n    background-color: #FF6756;\n  }\n`;\n\nexport default Button;","import React from 'react'\nimport styled from 'styled-components';\nimport { graphql } from 'gatsby';\n\nimport Layout from '../components/layout'\nimport Container from '../components/container';\nimport Button from '../components/button';\n\nconst About = styled.div`\n  display: block;\n  position: relative;\n  margin: 50px auto;\n  text-align: center;\n  width: 400px;\n\n  @media (max-width: 400px) {\n    transform: none;\n    margin-top: 25px;\n    margin-bottom: 100px;\n    padding: 0 10px;\n    position: relative;\n    top: 0;\n    left: 0;\n    width: 100%;\n  }\n`;\n\nconst Header = styled.h1`\n  margin-bottom: 25px;\n`;\n\nconst Description = styled.div`\n  text-align: justify;\n`;\n\nconst ConnectButton = styled(Button)`\n  display: inline-block;\n  margin-top: 25px;\n`;\n\nconst AboutPage = ({ data, location }) => {\n  const content = data[process.env.LOCALE || 'en'];\n  const {\n    pageName,\n    title,\n    description: {\n      childMarkdownRemark: {\n        html: description\n      }\n    },\n    buttonText,\n    buttonLink\n  } = content;\n\n  return (\n    <Layout location={location} pageName={pageName}>\n      <Container>\n        <About>\n          <Header>\n            { title }\n          </Header>\n          <Description dangerouslySetInnerHTML={{ __html: description }}>\n          </Description>\n          <ConnectButton to={buttonLink}>\n            { buttonText }\n          </ConnectButton>\n        </About>\n      </Container>\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  query {\n    en: contentfulAbout(node_locale: { eq: \"en-US\" }) { ...AboutPageFragment }\n    fr: contentfulAbout(node_locale: { eq: \"fr\" }) { ...AboutPageFragment }\n  }\n  fragment AboutPageFragment on ContentfulAbout {\n    pageName\n    title\n    description {\n      childMarkdownRemark {\n        html\n      }\n    }\n    buttonText\n    buttonLink\n  }\n`;\n\nexport default AboutPage;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport { waitForRouteChange } from \"./wait-for-route-change\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  waitForRouteChange,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  display: block;\n  margin: 0 auto;\n  overflow: auto;\n  width: 1200px;\n\n  @media (max-width: 1200px) {\n      width: 100%;\n  }\n`;\n\nexport default Container;","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { StaticQuery, graphql, Link } from 'gatsby'\nimport styled from 'styled-components';\n\nimport Container from './container';\n\nconst Footer = styled.footer`\n  background-color: #242424;\n  display: block;\n  overflow: visible;\n  position: relative;\n  text-align: center;\n  width: 100%;\n`;\n\nconst Navigation = styled.ul`\n  margin: 0;\n  padding: 15px 0;\n  text-align: center;\n  list-style: none;\n\n  @media (max-width: 1200px) {\n    display: none;\n  }\n`;\n\nconst NavigationItem = styled.nav`\n  color: #fff;\n  display: inline-block;\n  margin: 0 50px;\n`;\n\nconst NavigationLink = styled(Link)`\n  transition: all 0.25s ease-in-out;\n  color: #ccc;\n  font-size: 0.8em;\n  font-weight: lighter;\n  letter-spacing: 4px;\n  text-decoration: none;\n  text-transform: uppercase;\n\n  &:hover {\n    color: #fff;\n  }\n`;\n\nconst Hamburger = styled.div`\n  display: none;\n  font-size: 1.25em;\n  padding: 15px 25px 0;\n  text-align: right;\n  width: 100%;\n\n  @media (max-width: 1200px) {\n    display: block;\n  }\n`;\n\nconst HamburgerIcon = styled.span`\n  color: #fff;\n`;\n\nconst Credits = styled.span`\n  color: #aaa;\n  display: block;\n  font-size: 0.8em;\n  margin: 25px 0;\n\n  p {\n    margin: 0;\n    padding: 0;\n  }\n\n  a {\n    color: #ccc;\n  }\n`;\n\nconst getLinkForPage = (page, location) => {\n  var type = page.__typename.replace('Contentful', '').toLowerCase();\n  var url = `/${type === 'homepage' ? '' : type}`;\n\n  return {\n    url,\n    external: false,\n    key: type,\n    text: page.pageName\n  };\n}\n\nconst determineCurrent = ({ location, href }) => {\n  const linkPath = location.pathname.replace(/\\//g, '');\n  const currentPath = href.replace(/\\//g, '');\n  return (currentPath === linkPath) ? { style: { color: '#fff' } } : null;\n}\n\nconst makeContent = (location) => (data) => {\n  const content = data[process.env.LOCALE || 'en'];\n  const { footer: { childMarkdownRemark: { html: credits } } } = content;\n  const links = content.pages.map(getLinkForPage, location);\n  const insertAfterIndex = content.pages.map(x => x.__typename).indexOf(content.insertLinksAfter.__typename);\n  \n  const externalLinks = content.externalLinks.map(({ text, url }) => ({\n    url: encodeURIComponent(`out?url=${url}`),\n    text,\n    external: true,\n    key: url\n  }));\n  \n  if (insertAfterIndex >= 0) {\n    links.splice(\n      insertAfterIndex + 1,\n      0,\n      ...externalLinks\n    );\n  }\n\n  return (\n    <Footer>\n      <Container>\n        <Hamburger>\n          <HamburgerIcon className=\"fa fa-bars\" id=\"mobile_nav_toggle\">\n          </HamburgerIcon>\n        </Hamburger>\n        <Navigation>\n          {links.map(link => (\n            <NavigationItem key={link.key}>\n              <NavigationLink to={link.url} getProps={determineCurrent}>\n                {link.text}\n              </NavigationLink>\n            </NavigationItem>))}\n        </Navigation>\n        <Credits dangerouslySetInnerHTML={{ __html: credits }}>\n        </Credits>\n      </Container>\n    </Footer>\n  );\n}\n\nconst NavBar = ({ location }) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        en: contentfulNavbar(node_locale: { eq: \"en-US\" }) { ...NavbarFragment }\n        fr: contentfulNavbar(node_locale: { eq: \"fr\" }) { ...NavbarFragment }\n      }\n      fragment NavbarFragment on ContentfulNavbar {\n        name\n        footer {\n          childMarkdownRemark {\n            html\n          }\n        }\n        pages {\n          ...on ContentfulHomepage { pageName },\n          ...on ContentfulAbout { pageName },\n          ...on ContentfulProjects { pageName },\n          ...on ContentfulPortfolio { pageName },\n          ...on ContentfulConnect { pageName },\n        }\n        externalLinks {\n          text \n          url\n        }\n        insertLinksAfter {\n          __typename\n        }\n      }\n    `}\n    render={makeContent(location)}\n  />\n)\n\nexport default NavBar\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\nimport styled from 'styled-components';\n\nimport NavBar from './navbar'\nimport './layout.scss'\n\nconst Main = styled.main`\n  height: calc(100% - 30px - 1em);\n  max-height: calc(100% - 32px - 1em);\n  display: block;\n  overflow-y: scroll;\n  overflow-x: hidden;\n  position: relative;\n  animation: animation-fade 1s ease-in-out;\n\n  @keyframes animation-fade {\n    from {\n      opacity: 0;\n    }\n\n    to {\n      opacity: 1;\n    }\n  }\n`;\nconst Layout = ({ children, pageName, location }) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        en: contentfulMetadata(node_locale: { eq: \"en-US\" }) { ...MetadataFragment }\n        fr: contentfulMetadata(node_locale: { eq: \"fr\" }) { ...MetadataFragment }\n      }\n      fragment MetadataFragment on ContentfulMetadata {\n        siteName\n      }\n    `}\n    render={data => {\n      const content = data[process.env.LOCALE || 'en'];\n      const { siteName, description, keywords } = content;\n\n      return (\n        <>\n          <Helmet\n            title={`${pageName} | ${siteName}`}\n            meta={[\n              { name: 'description', content: description },\n              { name: 'keywords', content: keywords },\n            ]}\n          >\n            <html lang=\"en\" />\n          </Helmet>\n          <Main>\n            {children}\n          </Main>\n          <NavBar location={location} />\n        </>\n      )\n    }}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/container.jsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/navbar.jsx","webpack:///./src/components/layout.jsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","NotFoundPage","a","createElement","d","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_wait_for_route_change__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4___default","_parse_path__WEBPACK_IMPORTED_MODULE_5__","React","createContext","props","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","Container","styled","div","withConfig","displayName","componentId","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Footer","footer","Navigation","ul","NavigationItem","nav","NavigationLink","Link","Hamburger","HamburgerIcon","span","Credits","getLinkForPage","page","type","__typename","replace","toLowerCase","url","external","key","text","pageName","determineCurrent","href","linkPath","style","color","NavBar","_ref3","react_default","gatsby_browser_entry","content","credits","childMarkdownRemark","html","links","pages","map","insertAfterIndex","x","indexOf","insertLinksAfter","externalLinks","_ref2","encodeURIComponent","splice","apply","concat","container","className","id","link","to","getProps","dangerouslySetInnerHTML","__html","makeContent","_2260636581","Main","main","Layout","siteName","description","keywords","Fragment","Helmet_default","title","meta","name","lang","navbar","_297150321","node"],"mappings":"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","file":"component---src-pages-404-js-e9803b5f285e3c0830a3.js","sourcesContent":["import React from 'react'\nimport Layout from '../components/layout'\n\nconst NotFoundPage = () => (\n  <Layout>\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport { waitForRouteChange } from \"./wait-for-route-change\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  waitForRouteChange,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  display: block;\n  margin: 0 auto;\n  overflow: auto;\n  width: 1200px;\n\n  @media (max-width: 1200px) {\n      width: 100%;\n  }\n`;\n\nexport default Container;","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { StaticQuery, graphql, Link } from 'gatsby'\nimport styled from 'styled-components';\n\nimport Container from './container';\n\nconst Footer = styled.footer`\n  background-color: #242424;\n  display: block;\n  overflow: visible;\n  position: relative;\n  text-align: center;\n  width: 100%;\n`;\n\nconst Navigation = styled.ul`\n  margin: 0;\n  padding: 15px 0;\n  text-align: center;\n  list-style: none;\n\n  @media (max-width: 1200px) {\n    display: none;\n  }\n`;\n\nconst NavigationItem = styled.nav`\n  color: #fff;\n  display: inline-block;\n  margin: 0 50px;\n`;\n\nconst NavigationLink = styled(Link)`\n  transition: all 0.25s ease-in-out;\n  color: #ccc;\n  font-size: 0.8em;\n  font-weight: lighter;\n  letter-spacing: 4px;\n  text-decoration: none;\n  text-transform: uppercase;\n\n  &:hover {\n    color: #fff;\n  }\n`;\n\nconst Hamburger = styled.div`\n  display: none;\n  font-size: 1.25em;\n  padding: 15px 25px 0;\n  text-align: right;\n  width: 100%;\n\n  @media (max-width: 1200px) {\n    display: block;\n  }\n`;\n\nconst HamburgerIcon = styled.span`\n  color: #fff;\n`;\n\nconst Credits = styled.span`\n  color: #aaa;\n  display: block;\n  font-size: 0.8em;\n  margin: 25px 0;\n\n  p {\n    margin: 0;\n    padding: 0;\n  }\n\n  a {\n    color: #ccc;\n  }\n`;\n\nconst getLinkForPage = (page, location) => {\n  var type = page.__typename.replace('Contentful', '').toLowerCase();\n  var url = `/${type === 'homepage' ? '' : type}`;\n\n  return {\n    url,\n    external: false,\n    key: type,\n    text: page.pageName\n  };\n}\n\nconst determineCurrent = ({ location, href }) => {\n  const linkPath = location.pathname.replace(/\\//g, '');\n  const currentPath = href.replace(/\\//g, '');\n  return (currentPath === linkPath) ? { style: { color: '#fff' } } : null;\n}\n\nconst makeContent = (location) => (data) => {\n  const content = data[process.env.LOCALE || 'en'];\n  const { footer: { childMarkdownRemark: { html: credits } } } = content;\n  const links = content.pages.map(getLinkForPage, location);\n  const insertAfterIndex = content.pages.map(x => x.__typename).indexOf(content.insertLinksAfter.__typename);\n  \n  const externalLinks = content.externalLinks.map(({ text, url }) => ({\n    url: encodeURIComponent(`out?url=${url}`),\n    text,\n    external: true,\n    key: url\n  }));\n  \n  if (insertAfterIndex >= 0) {\n    links.splice(\n      insertAfterIndex + 1,\n      0,\n      ...externalLinks\n    );\n  }\n\n  return (\n    <Footer>\n      <Container>\n        <Hamburger>\n          <HamburgerIcon className=\"fa fa-bars\" id=\"mobile_nav_toggle\">\n          </HamburgerIcon>\n        </Hamburger>\n        <Navigation>\n          {links.map(link => (\n            <NavigationItem key={link.key}>\n              <NavigationLink to={link.url} getProps={determineCurrent}>\n                {link.text}\n              </NavigationLink>\n            </NavigationItem>))}\n        </Navigation>\n        <Credits dangerouslySetInnerHTML={{ __html: credits }}>\n        </Credits>\n      </Container>\n    </Footer>\n  );\n}\n\nconst NavBar = ({ location }) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        en: contentfulNavbar(node_locale: { eq: \"en-US\" }) { ...NavbarFragment }\n        fr: contentfulNavbar(node_locale: { eq: \"fr\" }) { ...NavbarFragment }\n      }\n      fragment NavbarFragment on ContentfulNavbar {\n        name\n        footer {\n          childMarkdownRemark {\n            html\n          }\n        }\n        pages {\n          ...on ContentfulHomepage { pageName },\n          ...on ContentfulAbout { pageName },\n          ...on ContentfulProjects { pageName },\n          ...on ContentfulPortfolio { pageName },\n          ...on ContentfulConnect { pageName },\n        }\n        externalLinks {\n          text \n          url\n        }\n        insertLinksAfter {\n          __typename\n        }\n      }\n    `}\n    render={makeContent(location)}\n  />\n)\n\nexport default NavBar\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\nimport styled from 'styled-components';\n\nimport NavBar from './navbar'\nimport './layout.scss'\n\nconst Main = styled.main`\n  height: calc(100% - 30px - 1em);\n  max-height: calc(100% - 32px - 1em);\n  display: block;\n  overflow-y: scroll;\n  overflow-x: hidden;\n  position: relative;\n  animation: animation-fade 1s ease-in-out;\n\n  @keyframes animation-fade {\n    from {\n      opacity: 0;\n    }\n\n    to {\n      opacity: 1;\n    }\n  }\n`;\nconst Layout = ({ children, pageName, location }) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        en: contentfulMetadata(node_locale: { eq: \"en-US\" }) { ...MetadataFragment }\n        fr: contentfulMetadata(node_locale: { eq: \"fr\" }) { ...MetadataFragment }\n      }\n      fragment MetadataFragment on ContentfulMetadata {\n        siteName\n      }\n    `}\n    render={data => {\n      const content = data[process.env.LOCALE || 'en'];\n      const { siteName, description, keywords } = content;\n\n      return (\n        <>\n          <Helmet\n            title={`${pageName} | ${siteName}`}\n            meta={[\n              { name: 'description', content: description },\n              { name: 'keywords', content: keywords },\n            ]}\n          >\n            <html lang=\"en\" />\n          </Helmet>\n          <Main>\n            {children}\n          </Main>\n          <NavBar location={location} />\n        </>\n      )\n    }}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}
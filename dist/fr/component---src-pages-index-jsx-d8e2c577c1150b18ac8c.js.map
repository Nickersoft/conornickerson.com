{"version":3,"sources":["webpack:///./src/pages/index.jsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/container.jsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/navbar.jsx","webpack:///./src/components/layout.jsx"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","styled_components__WEBPACK_IMPORTED_MODULE_2__","_components_layout__WEBPACK_IMPORTED_MODULE_3__","Sidebar","styled","div","withConfig","displayName","componentId","HeaderArea","Header","h1","Subheader","h2","Logo","img","CoverImageContainer","CoverImage","Languages","Language","Link","LandingPage","_ref","data","location","content","pageName","titleLine1","titleLine2","logo","fluid","image","coverImage","a","createElement","srcSet","className","to","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_wait_for_route_change__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4___default","_parse_path__WEBPACK_IMPORTED_MODULE_5__","React","createContext","props","Consumer","staticQueryData","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","Container","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Footer","footer","Navigation","ul","NavigationItem","nav","NavigationLink","Hamburger","HamburgerIcon","span","Credits","getLinkForPage","page","type","__typename","replace","toLowerCase","url","external","key","text","determineCurrent","href","linkPath","style","color","NavBar","_ref3","react_default","gatsby_browser_entry","credits","childMarkdownRemark","html","links","pages","map","insertAfterIndex","x","indexOf","insertLinksAfter","externalLinks","_ref2","encodeURIComponent","splice","apply","concat","container","id","link","getProps","dangerouslySetInnerHTML","__html","makeContent","_2260636581","Main","main","Layout","siteName","description","keywords","Fragment","Helmet_default","title","meta","name","lang","navbar","_297150321","node"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,0BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KAMMW,EAAUC,IAAOC,IAAVC,WAAA,CAAAC,YAAA,iBAAAC,YAAA,gBAAGJ,CAAH,6IAaPK,EAAaL,IAAOC,IAAVC,WAAA,CAAAC,YAAA,oBAAAC,YAAA,gBAAGJ,CAAH,qFASVM,EAASN,IAAOO,GAAVL,WAAA,CAAAC,YAAA,gBAAAC,YAAA,gBAAGJ,CAAH,2HAYNQ,EAAYR,IAAOS,GAAVP,WAAA,CAAAC,YAAA,mBAAAC,YAAA,gBAAGJ,CAAH,0IAaTU,EAAOV,IAAOW,IAAVT,WAAA,CAAAC,YAAA,cAAAC,YAAA,gBAAGJ,CAAH,uCAKJY,EAAsBZ,IAAOC,IAAVC,WAAA,CAAAC,YAAA,6BAAAC,YAAA,gBAAGJ,CAAH,qHASnBa,EAAab,IAAOW,IAAVT,WAAA,CAAAC,YAAA,oBAAAC,YAAA,gBAAGJ,CAAH,kIAUVc,EAAYd,IAAOC,IAAVC,WAAA,CAAAC,YAAA,mBAAAC,YAAA,gBAAGJ,CAAH,sCAKTe,EAAWf,YAAOgB,QAAVd,WAAA,CAAAC,YAAA,kBAAAC,YAAA,gBAAGJ,CAAH,kTAoEDR,EAAK,aAsBHyB,UAhEK,SAAAC,GAAwB,IAArBC,EAAqBD,EAArBC,KAAMC,EAAeF,EAAfE,SACrBC,EAAUF,EAAI,GAElBG,EASED,EATFC,SACAC,EAQEF,EARFE,WACAC,EAOEH,EAPFG,WAESC,EAKPJ,EANFI,KACEC,MAGOC,EAEPN,EAHFO,WACEF,MAIJ,OACEhC,EAAAmC,EAAAC,cAAChC,EAAA,EAAD,CAAQsB,SAAUA,EAAUE,SAAUA,GACpC5B,EAAAmC,EAAAC,cAAC/B,EAAD,KACEL,EAAAmC,EAAAC,cAACzB,EAAD,KACEX,EAAAmC,EAAAC,cAACpB,EAAD,CAAMqB,OAAQN,EAAKM,SACnBrC,EAAAmC,EAAAC,cAACxB,EAAD,KACIiB,GAEJ7B,EAAAmC,EAAAC,cAACtB,EAAD,KACIgB,GAEJ9B,EAAAmC,EAAAC,cAAChB,EAAD,KACEpB,EAAAmC,EAAAC,cAACf,EAAD,CAAUiB,UAAqD,GAAIC,GAAG,SAAtE,MAGAvC,EAAAmC,EAAAC,cAACf,EAAD,CAAUiB,UAA0C,SAAeC,GAAG,SAAtE,SAMNvC,EAAAmC,EAAAC,cAAClB,EAAD,KACElB,EAAAmC,EAAAC,cAACjB,EAAD,CAAYkB,OAAQJ,EAAMI,8CChJlC3C,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,4BAAA4C,IAAA9C,EAAAG,EAAAD,EAAA,uCAAA6C,IAAA/C,EAAAG,EAAAD,EAAA,gCAAA8C,IAAA,IAAA3C,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAA4C,EAAAjD,EAAA,GAAAkD,EAAAlD,EAAAO,EAAA0C,GAAAE,EAAAnD,EAAA,KAAAoD,EAAApD,EAAAO,EAAA4C,GAAAnD,EAAAG,EAAAD,EAAA,yBAAAkD,EAAAX,IAAAzC,EAAAG,EAAAD,EAAA,+BAAAiD,EAAA,aAAAnD,EAAAG,EAAAD,EAAA,6BAAAiD,EAAA,WAAAnD,EAAAG,EAAAD,EAAA,yBAAAiD,EAAA,OAAAnD,EAAAG,EAAAD,EAAA,4BAAAiD,EAAA,UAAAnD,EAAAG,EAAAD,EAAA,+BAAAiD,EAAA,iBAAAE,EAAArD,EAAA,IAAAA,EAAAG,EAAAD,EAAA,uCAAAmD,EAAA,QAAAC,EAAAtD,EAAA,KAAAuD,EAAAvD,EAAAO,EAAA+C,GAAAtD,EAAAG,EAAAD,EAAA,iCAAAqD,EAAAd,IAAA,IAAAe,EAAAxD,EAAA,IAAAA,EAAAG,EAAAD,EAAA,8BAAAsD,EAAA,IAaA,IAAMT,EAAqBU,IAAMC,cAAc,IAEzCV,EAAc,SAAAW,GAAK,OACvBrD,EAAAmC,EAAAC,cAACK,EAAmBa,SAApB,KACG,SAAAC,GACC,OACEF,EAAM5B,MACL8B,EAAgBF,EAAMvD,QAAUyD,EAAgBF,EAAMvD,OAAO2B,MAEtD4B,EAAMG,QAAUH,EAAMI,UAC5BJ,EAAM5B,KAAO4B,EAAM5B,KAAKA,KAAO8B,EAAgBF,EAAMvD,OAAO2B,MAGvDzB,EAAAmC,EAAAC,cAAA,uCAaf,SAASI,IACP,MAAM,IAAIkB,MACR,gVATJhB,EAAYiB,UAAY,CACtBlC,KAAMmC,IAAUC,OAChB/D,MAAO8D,IAAUE,OAAOC,WACxBP,OAAQI,IAAUI,KAClBP,SAAUG,IAAUI,2BCpCtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oCCA/C,IAEMK,EAFN5E,EAAA,KAEkBY,EAAOC,IAAVC,WAAA,CAAAC,YAAA,uBAAAC,YAAA,gBAAGJ,CAAH,mGAWAgE,4MCPTC,EAAmB,SAAA/C,GAAkB,IAAfE,EAAeF,EAAfE,SACpB8C,EAAgBC,UAAOC,4BAA4BhD,EAASiD,UAClE,OAAOxB,IAAMf,cAAcwC,IAApBC,OAAAC,OAAA,CACLpD,WACA8C,iBACGA,EAAcO,QAIrBR,EAAiBZ,UAAY,CAC3BjC,SAAUkC,IAAUoB,MAAM,CACxBL,SAAUf,IAAUE,OAAOC,aAC1BA,YAGUQ,s1CCfTU,EAAS3E,IAAO4E,OAAV1E,WAAA,CAAAC,YAAA,iBAAAC,YAAA,gBAAGJ,CAAH,6GASN6E,EAAa7E,IAAO8E,GAAV5E,WAAA,CAAAC,YAAA,qBAAAC,YAAA,gBAAGJ,CAAH,wGAWV+E,EAAiB/E,IAAOgF,IAAV9E,WAAA,CAAAC,YAAA,yBAAAC,YAAA,gBAAGJ,CAAH,oDAMdiF,EAAiBjF,YAAOgB,QAAVd,WAAA,CAAAC,YAAA,yBAAAC,YAAA,gBAAGJ,CAAH,2KAcdkF,EAAYlF,IAAOC,IAAVC,WAAA,CAAAC,YAAA,oBAAAC,YAAA,gBAAGJ,CAAH,6HAYTmF,EAAgBnF,IAAOoF,KAAVlF,WAAA,CAAAC,YAAA,wBAAAC,YAAA,gBAAGJ,CAAH,iBAIbqF,EAAUrF,IAAOoF,KAAVlF,WAAA,CAAAC,YAAA,kBAAAC,YAAA,gBAAGJ,CAAH,iGAgBPsF,EAAiB,SAACC,EAAMnE,GAC5B,IAAIoE,EAAOD,EAAKE,WAAWC,QAAQ,aAAc,IAAIC,cAGrD,MAAO,CACLC,IAHK,KAAgB,aAATJ,EAAsB,GAAKA,GAIvCK,UAAU,EACVC,IAAKN,EACLO,KAAMR,EAAKjE,WAIT0E,EAAmB,SAAA9E,GAAwB,IAArBE,EAAqBF,EAArBE,SAAU6E,EAAW/E,EAAX+E,KAC9BC,EAAW9E,EAASiD,SAASqB,QAAQ,MAAO,IAElD,OADoBO,EAAKP,QAAQ,MAAO,MAChBQ,EAAY,CAAEC,MAAO,CAAEC,MAAO,SAAa,MAgFtDC,EAlCA,SAAAC,GAAA,IAAGlF,EAAHkF,EAAGlF,SAAH,OACbmF,EAAA1E,EAAAC,cAAC0E,EAAA,YAAD,CACEhH,MAAK,aA4BL0D,OAzEgB,SAAC9B,GAAD,OAAc,SAACD,GACjC,IAAME,EAAUF,EAAI,GAC2BsF,EAAgBpF,EAAvDuD,OAAU8B,oBAAuBC,KACnCC,EAAQvF,EAAQwF,MAAMC,IAAIxB,EAAgBlE,GAC1C2F,EAAmB1F,EAAQwF,MAAMC,IAAI,SAAAE,GAAC,OAAIA,EAAEvB,aAAYwB,QAAQ5F,EAAQ6F,iBAAiBzB,YAEzF0B,EAAgB9F,EAAQ8F,cAAcL,IAAI,SAAAM,GAAA,IAAGrB,EAAHqB,EAAGrB,KAAMH,EAATwB,EAASxB,IAAT,MAAoB,CAClEA,IAAKyB,mBAAkB,WAAYzB,GACnCG,OACAF,UAAU,EACVC,IAAKF,KAWP,OARImB,GAAoB,GACtBH,EAAMU,OAANC,MAAAX,EAAK,CACHG,EAAmB,EACnB,GAFGS,OAGAL,IAKLZ,EAAA1E,EAAAC,cAAC6C,EAAD,KACE4B,EAAA1E,EAAAC,cAAC2F,EAAA,EAAD,KACElB,EAAA1E,EAAAC,cAACoD,EAAD,KACEqB,EAAA1E,EAAAC,cAACqD,EAAD,CAAenD,UAAU,aAAa0F,GAAG,uBAG3CnB,EAAA1E,EAAAC,cAAC+C,EAAD,KACG+B,EAAME,IAAI,SAAAa,GAAI,OACbpB,EAAA1E,EAAAC,cAACiD,EAAD,CAAgBe,IAAK6B,EAAK7B,KACxBS,EAAA1E,EAAAC,cAACmD,EAAD,CAAgBhD,GAAI0F,EAAK/B,IAAKgC,SAAU5B,GACrC2B,EAAK5B,UAIdQ,EAAA1E,EAAAC,cAACuD,EAAD,CAASwC,wBAAyB,CAAEC,OAAQrB,QAqCxCsB,CAAY3G,GA7BtBD,KAAA6G,KCnIIC,UAAOjI,IAAOkI,KAAVhI,WAAA,CAAAC,YAAA,eAAAC,YAAA,YAAGJ,CAAH,8OAmBJmI,EAAS,SAAAjH,GAAA,IAAGiC,EAAHjC,EAAGiC,SAAU7B,EAAbJ,EAAaI,SAAUF,EAAvBF,EAAuBE,SAAvB,OACbmF,EAAA1E,EAAAC,cAAC0E,EAAA,YAAD,CACEhH,MAAK,YASL0D,OAAQ,SAAA/B,GACN,IAAME,EAAUF,EAAI,GACZiH,EAAoC/G,EAApC+G,SAAUC,EAA0BhH,EAA1BgH,YAAaC,EAAajH,EAAbiH,SAE/B,OACE/B,EAAA1E,EAAAC,cAAAyE,EAAA1E,EAAA0G,SAAA,KACEhC,EAAA1E,EAAAC,cAAC0G,EAAA3G,EAAD,CACE4G,MAAUnH,EAAL,MAAmB8G,EACxBM,KAAM,CACJ,CAAEC,KAAM,cAAetH,QAASgH,GAChC,CAAEM,KAAM,WAAYtH,QAASiH,KAG/B/B,EAAA1E,EAAAC,cAAA,QAAM8G,KAAK,QAEbrC,EAAA1E,EAAAC,cAACmG,EAAD,KACG9E,GAEHoD,EAAA1E,EAAAC,cAAC+G,EAAD,CAAQzH,SAAUA,MA5B1BD,KAAA2H,KAmCFX,EAAO9E,UAAY,CACjBF,SAAUG,IAAUyF,KAAKtF,YAGZ0E","file":"component---src-pages-index-jsx-d8e2c577c1150b18ac8c.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport styled from 'styled-components';\n\nimport Layout from '../components/layout'\n\nconst Sidebar = styled.div`\n  background: #242424;\n  display: inline-block;\n  height: 100%;\n  overflow: hidden;\n  width: 450px;\n  vertical-align: top;\n\n  @media (max-width: 500px) {\n    width: 100%\n  }\n`;\n\nconst HeaderArea = styled.div`\n  margin-top: 50%;\n  transform: translateY(-25%);\n\n  @media (max-width: 700px) {\n    width: 100%;\n  }\n`;\n\nconst Header = styled.h1`\n  color: #FFF;\n  letter-spacing: 0;\n  font-size: 2.25rem;\n  padding: 0 10px;\n  margin-top: 10px;\n\n  @media (max-width: 700px) {\n    font-size: 3em;\n  }\n`;\n\nconst Subheader = styled.h2`\n  color: #FFF;\n  display: block;\n  font-size: 1.75rem;\n  letter-spacing: 0;\n  margin: 10px 0 100px;\n  padding: 0;\n\n  @media (max-width: 500px) {\n    font-size: 1.5em;\n  }\n`;\n\nconst Logo = styled.img`\n  padding: 0px 80px 10px;\n  width: 100%;\n`;\n\nconst CoverImageContainer = styled.div`\n  display: inline-block;\n  width: calc(100% - 450px);\n  vertical-align: top;\n  height: 100%;\n  overflow: hidden;\n  position: relative;\n`;\n\nconst CoverImage = styled.img`\n  min-height: 660px;\n  height: 100%;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  min-width: 990px;\n  transform: translateX(-50%) translateY(-50%);\n`;\n\nconst Languages = styled.div`\n  display: block;\n  text-align: center;\n`;\n\nconst Language = styled(Link)`\n  transition: opacity 0.5s ease-in-out;\n  border-right: 1px solid #fff;\n  background-size: cover;\n  color: #fff;\n  cursor: pointer;\n  display: inline-block;\n  font-size: 1.4em;\n  padding: 0 12px;\n  text-transform: uppercase;\n  opacity: 0.5;\n\n  &.active {\n    opacity: 1.0;\n  }\n\n  &:not(.active):hover {\n    opacity: 0.75;\n  }\n\n  &:last-child {\n    border: none;\n    padding-right: 0;\n  }\n`;\n\nconst LandingPage = ({ data, location }) => {\n  const content = data[process.env.LOCALE || 'en'];\n  const { \n    pageName,\n    titleLine1, \n    titleLine2, \n    logo: {\n      fluid: logo\n    },\n    coverImage: { \n      fluid: image \n    }\n  } = content;\n\n  return (\n    <Layout location={location} pageName={pageName}>\n      <Sidebar>\n        <HeaderArea>\n          <Logo srcSet={logo.srcSet} />\n          <Header>\n            { titleLine1 }\n          </Header>\n          <Subheader>\n            { titleLine2 }\n          </Subheader>\n          <Languages>\n            <Language className={ process.env.LOCALE === 'en' ? 'active' : ''} to=\"../en\">\n              EN\n            </Language>\n            <Language className={ process.env.LOCALE === 'fr' ? 'active' : ''} to=\"../fr\">\n              FR\n            </Language>\n          </Languages>\n        </HeaderArea>\n      </Sidebar>\n      <CoverImageContainer>\n        <CoverImage srcSet={image.srcSet} />\n      </CoverImageContainer>\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  query {\n    en: contentfulHomepage(node_locale: { eq: \"en-US\" }) { ...LandingPageFragment }\n    fr: contentfulHomepage(node_locale: { eq: \"fr\" }) { ...LandingPageFragment }\n  }\n  fragment LandingPageFragment on ContentfulHomepage {\n    pageName\n    titleLine1\n    titleLine2\n    logo {\n      fluid {\n        ...GatsbyContentfulFluid_noBase64\n      }\n    }\n    coverImage {\n      fluid {\n        ...GatsbyContentfulFluid_noBase64\n      }\n    }\n  }\n`;\n\nexport default LandingPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport { waitForRouteChange } from \"./wait-for-route-change\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  waitForRouteChange,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  display: block;\n  margin: 0 auto;\n  overflow: auto;\n  width: 1200px;\n\n  @media (max-width: 1200px) {\n      width: 100%;\n  }\n`;\n\nexport default Container;","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { StaticQuery, graphql, Link } from 'gatsby'\nimport styled from 'styled-components';\n\nimport Container from './container';\n\nconst Footer = styled.footer`\n  background-color: #242424;\n  display: block;\n  overflow: visible;\n  position: relative;\n  text-align: center;\n  width: 100%;\n`;\n\nconst Navigation = styled.ul`\n  margin: 0;\n  padding: 15px 0;\n  text-align: center;\n  list-style: none;\n\n  @media (max-width: 1200px) {\n    display: none;\n  }\n`;\n\nconst NavigationItem = styled.nav`\n  color: #fff;\n  display: inline-block;\n  margin: 0 50px;\n`;\n\nconst NavigationLink = styled(Link)`\n  transition: all 0.25s ease-in-out;\n  color: #ccc;\n  font-size: 0.8em;\n  font-weight: lighter;\n  letter-spacing: 4px;\n  text-decoration: none;\n  text-transform: uppercase;\n\n  &:hover {\n    color: #fff;\n  }\n`;\n\nconst Hamburger = styled.div`\n  display: none;\n  font-size: 1.25em;\n  padding: 15px 25px 0;\n  text-align: right;\n  width: 100%;\n\n  @media (max-width: 1200px) {\n    display: block;\n  }\n`;\n\nconst HamburgerIcon = styled.span`\n  color: #fff;\n`;\n\nconst Credits = styled.span`\n  color: #aaa;\n  display: block;\n  font-size: 0.8em;\n  margin: 25px 0;\n\n  p {\n    margin: 0;\n    padding: 0;\n  }\n\n  a {\n    color: #ccc;\n  }\n`;\n\nconst getLinkForPage = (page, location) => {\n  var type = page.__typename.replace('Contentful', '').toLowerCase();\n  var url = `/${type === 'homepage' ? '' : type}`;\n\n  return {\n    url,\n    external: false,\n    key: type,\n    text: page.pageName\n  };\n}\n\nconst determineCurrent = ({ location, href }) => {\n  const linkPath = location.pathname.replace(/\\//g, '');\n  const currentPath = href.replace(/\\//g, '');\n  return (currentPath === linkPath) ? { style: { color: '#fff' } } : null;\n}\n\nconst makeContent = (location) => (data) => {\n  const content = data[process.env.LOCALE || 'en'];\n  const { footer: { childMarkdownRemark: { html: credits } } } = content;\n  const links = content.pages.map(getLinkForPage, location);\n  const insertAfterIndex = content.pages.map(x => x.__typename).indexOf(content.insertLinksAfter.__typename);\n  \n  const externalLinks = content.externalLinks.map(({ text, url }) => ({\n    url: encodeURIComponent(`out?url=${url}`),\n    text,\n    external: true,\n    key: url\n  }));\n  \n  if (insertAfterIndex >= 0) {\n    links.splice(\n      insertAfterIndex + 1,\n      0,\n      ...externalLinks\n    );\n  }\n\n  return (\n    <Footer>\n      <Container>\n        <Hamburger>\n          <HamburgerIcon className=\"fa fa-bars\" id=\"mobile_nav_toggle\">\n          </HamburgerIcon>\n        </Hamburger>\n        <Navigation>\n          {links.map(link => (\n            <NavigationItem key={link.key}>\n              <NavigationLink to={link.url} getProps={determineCurrent}>\n                {link.text}\n              </NavigationLink>\n            </NavigationItem>))}\n        </Navigation>\n        <Credits dangerouslySetInnerHTML={{ __html: credits }}>\n        </Credits>\n      </Container>\n    </Footer>\n  );\n}\n\nconst NavBar = ({ location }) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        en: contentfulNavbar(node_locale: { eq: \"en-US\" }) { ...NavbarFragment }\n        fr: contentfulNavbar(node_locale: { eq: \"fr\" }) { ...NavbarFragment }\n      }\n      fragment NavbarFragment on ContentfulNavbar {\n        name\n        footer {\n          childMarkdownRemark {\n            html\n          }\n        }\n        pages {\n          ...on ContentfulHomepage { pageName },\n          ...on ContentfulAbout { pageName },\n          ...on ContentfulProjects { pageName },\n          ...on ContentfulPortfolio { pageName },\n          ...on ContentfulConnect { pageName },\n        }\n        externalLinks {\n          text \n          url\n        }\n        insertLinksAfter {\n          __typename\n        }\n      }\n    `}\n    render={makeContent(location)}\n  />\n)\n\nexport default NavBar\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\nimport styled from 'styled-components';\n\nimport NavBar from './navbar'\nimport './layout.scss'\n\nconst Main = styled.main`\n  height: calc(100% - 30px - 1em);\n  max-height: calc(100% - 32px - 1em);\n  display: block;\n  overflow-y: scroll;\n  overflow-x: hidden;\n  position: relative;\n  animation: animation-fade 1s ease-in-out;\n\n  @keyframes animation-fade {\n    from {\n      opacity: 0;\n    }\n\n    to {\n      opacity: 1;\n    }\n  }\n`;\nconst Layout = ({ children, pageName, location }) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        en: contentfulMetadata(node_locale: { eq: \"en-US\" }) { ...MetadataFragment }\n        fr: contentfulMetadata(node_locale: { eq: \"fr\" }) { ...MetadataFragment }\n      }\n      fragment MetadataFragment on ContentfulMetadata {\n        siteName\n      }\n    `}\n    render={data => {\n      const content = data[process.env.LOCALE || 'en'];\n      const { siteName, description, keywords } = content;\n\n      return (\n        <>\n          <Helmet\n            title={`${pageName} | ${siteName}`}\n            meta={[\n              { name: 'description', content: description },\n              { name: 'keywords', content: keywords },\n            ]}\n          >\n            <html lang=\"en\" />\n          </Helmet>\n          <Main>\n            {children}\n          </Main>\n          <NavBar location={location} />\n        </>\n      )\n    }}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}
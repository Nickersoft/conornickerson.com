{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/container.jsx","webpack:///./src/components/with-language.jsx","webpack:///./src/components/navbar.jsx","webpack:///./src/components/layout.jsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","NotFoundPage","a","createElement","d","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_wait_for_route_change__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4___default","_parse_path__WEBPACK_IMPORTED_MODULE_5__","React","createContext","props","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","styled","div","withConfig","displayName","componentId","WithLanguage","match","exec","console","log","languageCode","trim","Footer","footer","Navigation","ul","NavigationItem","nav","Hamburger","HamburgerIcon","span","NavBar","react_default","with_language","language","gatsby_browser_entry","container","className","id","makeContent","_2756878450","Layout","Fragment","Helmet_default","title","site","siteMetadata","meta","name","content","lang","navbar","_755544856","node"],"mappings":"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","file":"component---src-pages-404-js-3549e0c0329f4d2e005c.js","sourcesContent":["import React from 'react'\nimport Layout from '../components/layout'\n\nconst NotFoundPage = () => (\n  <Layout>\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport { waitForRouteChange } from \"./wait-for-route-change\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  waitForRouteChange,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import styled from 'styled-components';\n\nexport default styled.div`\n  display: block;\n  margin: 0 auto;\n  overflow: auto;\n  width: 1200px;\n\n  @media (max-width: 1200px) {\n      width: 100%;\n  }\n`;","const WithLanguage = ({ location, render }) => {\n  if (location) {\n    const { pathname } = location;\n  \n    const regex = /^\\/(\\w{2})\\/.*$/\n    const match = regex.exec(pathname);\n    console.log(location);\n    var languageCode = match ? match[1] : 'en-US';\n  \n    if (languageCode.trim() === 'en') {\n      languageCode = 'en-US'\n    }\n  \n    return render(languageCode);    \n  }\n\n  return null;\n}\n\nexport default WithLanguage;","import React from 'react'\nimport { StaticQuery, graphql, Link } from 'gatsby'\nimport styled from 'styled-components';\n\nimport Container from './container';\nimport WithLanguage from './with-language';\n\nconst Footer = styled.footer`\n  background-color: #242424;\n  display: block;\n  overflow: visible;\n  position: relative;\n  text-align: center;\n  width: 100%;\n`;\n\nconst Navigation = styled.ul`\n  margin: 0;\n  padding: 15px 0;\n  text-align: center;\n\n  @media (max-width: 1200px) {\n    display: none;\n  }\n`;\n\nconst NavigationItem = styled.nav`\n  color: #fff;\n  display: inline-block;\n  margin: 0 50px;\n`;\n\nconst Hamburger = styled.div`\n  display: none;\n  font-size: 1.25em;\n  padding: 15px 25px 0;\n  text-align: right;\n  width: 100%;\n\n  @media (max-width: 1200px) {\n    display: block;\n  }\n`;\n\nconst HamburgerIcon = styled.span`\n  color: #fff;\n`;\n\nconst makeContent = (language) => (data) => {\n  const content = data[language];\n\n  return (\n    <Footer>\n      <Container>\n        <Hamburger>\n          <HamburgerIcon className=\"fa fa-bars\" id=\"mobile_nav_toggle\">\n          </HamburgerIcon>\n        </Hamburger>\n        <Navigation>\n          <NavigationItem>Yeet</NavigationItem>\n        </Navigation>\n      </Container>\n    </Footer>\n  );\n}\n\nconst NavBar = ({ location }) => (\n  <WithLanguage\n    location={location}\n    render={language => (\n      <StaticQuery\n        query={graphql`\n          query {\n            en: contentfulNavbar(node_locale: { eq: \"en-US\" }) { ...NavbarFragment }\n            fr: contentfulNavbar(node_locale: { eq: \"fr\" }) { ...NavbarFragment }\n          }\n          fragment NavbarFragment on ContentfulNavbar {\n            name\n            pages {\n              ...on ContentfulHomepage { pageName },\n              ...on ContentfulAbout { pageName },\n              ...on ContentfulProjects { pageName },\n              ...on ContentfulPortfolio { pageName },\n              ...on ContentfulConnect { pageName },\n            }\n            externalLinks {\n              text \n              url\n            }\n            insertLinksAfter {\n              __typename\n            }\n          }\n        `}\n        render={makeContent(language)}\n      />\n    )} />\n)\n\nexport default NavBar\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport NavBar from './navbar'\nimport './layout.scss'\n\nconst Layout = ({ children, location }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: 'Sample' },\n            { name: 'keywords', content: 'sample, something' },\n          ]}\n        >\n          <html lang=\"en\" />\n        </Helmet>\n        <main>\n          {children}\n        </main>\n        <NavBar location={location} />\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}